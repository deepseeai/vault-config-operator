apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault-config-operator.fullname" . }}
  labels:
    {{- include "vault-config-operator.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "vault-config-operator.selectorLabels" . | nindent 6 }}
      control-plane: vault-config-operator
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "vault-config-operator.selectorLabels" . | nindent 8 }}
        control-plane: vault-config-operator
    spec:
      serviceAccountName: controller-manager
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:{{ .Values.kube_rbac_proxy.securePort }}
        - --upstream=http://127.0.0.1:{{ .Values.metricsPort }}/
        - --logtostderr=true
        - --tls-cert-file=/etc/certs/tls/tls.crt
        - --tls-private-key-file=/etc/certs/tls/tls.key
        - --v=0
        image: "{{ .Values.kube_rbac_proxy.image.repository }}:{{ .Values.kube_rbac_proxy.image.tag }}"
        name: kube-rbac-proxy
        ports:
        - containerPort: {{ .Values.kube_rbac_proxy.securePort }}
          name: https
        volumeMounts:
        - mountPath: /etc/certs/tls
          name: vault-config-operator-certs
        imagePullPolicy: {{ .Values.kube_rbac_proxy.image.pullPolicy }}
        resources:
          {{- toYaml .Values.kube_rbac_proxy.resources | nindent 10 }}
      - command:
        - /manager
        args:
        - --leader-elect
        - --metrics-bind-address=0.0.0.0:{{ .Values.metricsPort }}
        - --health-probe-bind-address=0.0.0.0:{{ .Values.healthProbePort }}
        {{- with .Values.args }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: webhook-server-cert
          readOnly: true
          mountPath: /tmp/k8s-webhook-server/serving-certs
        {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.env }}
        env:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        name: {{ .Chart.Name }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthProbePort }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthProbePort }}
          initialDelaySeconds: 5
          periodSeconds: 10
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: vault-config-operator-certs
        secret:
          defaultMode: 420
          secretName: vault-config-operator-certs
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
          defaultMode: 420
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}

